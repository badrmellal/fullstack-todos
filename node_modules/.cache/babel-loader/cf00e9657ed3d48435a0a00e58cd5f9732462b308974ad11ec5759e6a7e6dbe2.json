{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/fullstack-react-java-tracker/frontend-react-tracker/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      // console.log(tasksFromServer.json());\n\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  //FETCH TASKS\n  const fetchTasks = async () => {\n    const response = await fetch('http://localhost:8080/api/tasks');\n    const data = await response.json();\n    return data;\n  };\n\n  //FETCH TASK\n  const fetchTask = async id => {\n    const response = await fetch(`http://localhost:8080/api/tasks/${id}`);\n    const data = await response.json();\n    return data;\n  };\n\n  //DELETE TASKS\n  const deleteTask = async id => {\n    fetch(`http://localhost:8080/api/deletetask/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const addTask = async task => {\n    const response = await fetch('http://localhost:8080/api/addtask', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await response.json();\n    setTasks([...tasks, data]);\n  };\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:8080/api/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      reminder: !data.reminder\n    } : task));\n  };\n\n  // const onSubmit = (newTask) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   newTask[\"id\"] = id;\n  //   setTasks([...tasks, newTask]);\n  // };\n\n  const toggleTask = () => {\n    console.log(\"showAddTask: \", showAddTask);\n    setShowAddTask(!showAddTask);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onAdd: toggleTask,\n        showAdd: showAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks,\n        onDelete: deleteTask,\n        onToggle: toggleReminder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : \"No Tasks to Show :)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","jsxDEV","_jsxDEV","App","_s","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","response","fetch","data","json","fetchTask","id","deleteTask","method","filter","task","addTask","headers","body","JSON","stringify","toggleReminder","taskToToggle","updatedTask","reminder","res","map","toggleTask","console","log","className","children","onAdd","showAdd","fileName","_jsxFileName","lineNumber","columnNumber","length","onDelete","onToggle","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/fullstack-react-java-tracker/frontend-react-tracker/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      // console.log(tasksFromServer.json());\n\n      setTasks(tasksFromServer);\n    }\n\n    getTasks();\n  }, []);\n\n  //FETCH TASKS\n  const fetchTasks = async () => {\n    const response = await fetch('http://localhost:8080/api/tasks');\n    const data = await response.json();\n    return data;\n  }\n  \n  //FETCH TASK\n  const fetchTask = async (id) => {\n    const response = await fetch(`http://localhost:8080/api/tasks/${id}`);\n    const data = await response.json();\n\n    return data;\n  }\n\n  //DELETE TASKS\n  const deleteTask = async (id) => {\n    fetch(`http://localhost:8080/api/deletetask/${id}`, {\n      method: 'DELETE'\n    })\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const addTask = async (task) => {\n    const response = await fetch('http://localhost:8080/api/addtask', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await response.json()\n    \n    setTasks([...tasks, data]);\n   \n  }\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:8080/api/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask),\n\n    });\n    \n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !data.reminder } : task\n      )\n    );\n  };\n\n  // const onSubmit = (newTask) => {\n  //   const id = Math.floor(Math.random() * 10000) + 1;\n  //   newTask[\"id\"] = id;\n  //   setTasks([...tasks, newTask]);\n  // };\n\n  const toggleTask = () => {\n    console.log(\"showAddTask: \", showAddTask);\n    setShowAddTask(!showAddTask);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Header onAdd={toggleTask} showAdd={showAddTask} />\n        {showAddTask && <AddTask onAdd={addTask} />}\n        {tasks.length > 0 ? (\n          <Tasks\n            tasks={tasks}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          />\n        ) : (\n          \"No Tasks to Show :)\"\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}